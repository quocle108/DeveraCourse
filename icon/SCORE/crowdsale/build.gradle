version = '0.1.0'

// for integration tests
sourceSets {
    intTest {}
}
configurations {
    intTestImplementation.extendsFrom testImplementation
    intTestRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
    compileOnly 'foundation.icon:javaee-api:0.9.0'

    testImplementation project(':irc2')
    testImplementation 'foundation.icon:javaee-unittest:0.9.2'
    testImplementation 'org.mockito:mockito-core:4.0.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    intTestImplementation project(':testinteg')
    intTestImplementation 'foundation.icon:icon-sdk:2.0.0'
}

optimizedJar {
    mainClassName = 'devera.score.example.Crowdsale'
    archivesBaseName = 'Crowdsale'
}

deployJar {
    endpoints {
        sejong {
            uri = 'https://sejong.net.solidwallet.io/api/v3'
            nid = 0x53
            to = 'cxf73d593a7930317befa304d50204794220672445'
        }
        local {
            uri = 'http://localhost:9082/api/v3'
            nid = 0x3
        }
    }
    keystore = rootProject.hasProperty('keystoreName') ? "$keystoreName" : ''
    password = rootProject.hasProperty('keystorePass') ? "$keystorePass" : ''
    parameters {
        arg('_fundingGoalInIcx', '10000000000000000000')//10
        arg('_tokenScore', 'cx22a72834f4b8835894c61da4ae60e0b8dc519080')
        arg('_durationInBlocks', '3600')
        arg('_tokenPrice', '10')
    }
}

test {
    useJUnitPlatform()
    // testLogging.showStandardStreams = true
    // testLogging.exceptionFormat = "full"
}

def irc2TokenBuildDirectory = project(':irc2').buildDir

task integrationTest(type: Test, dependsOn: optimizedJar) {
    useJUnitPlatform()
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath
    testLogging.showStandardStreams = true

    // use the common config files
    systemProperty('env.props', new File(project(':testinteg').projectDir, 'conf/env.props'))

    def prefix = 'score.path.'
    systemProperty(prefix + project.name, optimizedJar.outputJarName)
    systemProperty(prefix + 'irc2', """${irc2TokenBuildDirectory}/libs/IRC2BurnableToken-0.1.0-optimized.jar""")
}
